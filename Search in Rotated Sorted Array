//Search in Rotated Sorted Array
#include<iostream>;
#include<vector>;
using namespace std;
int result(vector<int>& nums, int target) {
	int left = 0;
	int right = nums.size() - 1;
	while (left <= right) {
		int m = left + (right - left) / 2;
		if (nums[m] == target)return m;
		if (nums[left] <= nums[m]) {
			if (target >= nums[left] && target < nums[m]) {
				right = m - 1;
			}
			else {
				left = m + 1;
			}
		}
		else {
			if (target <= nums[right] && target > nums[m]) {
				left = m + 1;

			}
			else {
				right = m - 1;
			}
		}
	}
	return -1;
}
int main()
{
	int n;
	cin >> n;
	vector<int> nums;
	for (int i = 0; i < n; i++) {
		int x;
		cin >> x;
		nums.push_back(x);
	}
	int target; cin >> target;
	cout << result(nums, target);
	return 0;

}
